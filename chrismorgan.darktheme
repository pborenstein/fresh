<link rel=stylesheet href=/2019b-dark.css
	media="screen and (prefers-color-scheme: dark)">

<!-- The magic works for more than one stylesheet, just needing this
media attribute; pages needing more than the global stylesheet and
`currentColor` offer can therefore add their own styles. -->
<style media="screen and (prefers-color-scheme: dark)">â€¦</style>

<details id=themer style=display:none>
	<summary aria-label=Theme
		title="Change theme (light/dark mode, serif/sans-serif font)">
			<b aria-hidden=true>ðŸŽ¨ A<i>a</i></b>
	</summary>
	<div>
		<script>

const themerDiv = document.currentScript.parentNode;
themerDiv.parentNode.style.display = '';

function switcher(prefName, offLabel, onLabel, suffix, defaultValue, apply) {
	let enabled;
	const button = document.createElement('button');
	function sync() {
		apply(enabled);
		// Update the button label
		button.childNodes[1].data = enabled ? offLabel : onLabel;
		// Try to persist to storage, iff weâ€™re effecting a deliberate change
		try {
			if (localStorage.getItem(prefName) || enabled != defaultValue) {
				localStorage.setItem(prefName, enabled);
			}
		} catch (e) {}
	}

	themerDiv.append(button);
	button.append('Switch to ', '', suffix);
	button.addEventListener('click', () => {
		enabled = +!enabled;
		sync();
	});
	try {
		enabled = localStorage.getItem(prefName);
	} catch (e) {}
	// enabled should now be null, '0' or '1'. Fill in the default value,
	// coerce what may be something like '0', '1', true or false to 0 or 1,
	// and act on it.
	enabled = +(enabled || defaultValue);
	sync();
	return sync;
}

let darkModeDefault = 0;
try {
	darkModeDefault = matchMedia('(prefers-color-scheme: dark)').matches;
} catch (e) {}

let stylesheetElements = document.querySelectorAll(
	'[media="screen and (prefers-color-scheme: dark)"]',
);

const syncDarkMode = switcher(
	'dark', 'light', 'dark', ' theme', darkModeDefault, enabled => {
		stylesheetElements.forEach(element => {
			element.media = enabled ? 'screen' : 'not all';
		});
	});

switcher('sans', 'serif', 'sans-serif', ' body font', 0, enabled => {
	document.documentElement.classList[enabled ? 'add' : 'remove']('sans');
});

// If anything is in the source after this script, catch it.
addEventListener('DOMContentLoaded', () => {
	stylesheetElements = [
		...stylesheetElements,
		...document.querySelectorAll(
			'[media="screen and (prefers-color-scheme: dark)"]',
		),
	];
	syncDarkMode();
});

		</script>
	</div>
</details>

<!-- Sadly video and audio sources canâ€™t use `media`, but picture can! -->
<picture>
	<source src=screenshot-dark.png
		media="screen and (prefers-color-scheme: dark)">
	<img src=screenshot-light.png>
</picture>
